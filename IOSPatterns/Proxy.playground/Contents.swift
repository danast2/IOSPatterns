import Cocoa

//Ох, все кто работает в большой компании – ненавидит доступ к интернету через
//прокси:) Что делает прокся? Ну многие из нас уверенны, что в основном она режет
//скорость интернета, хотя вероятнее всего она делает еще очень много
//положительных вещей:
//1. Логирует кто куда ходит.
//2. Смотрит, чтобы не ходили куда не следует.
//3. Смотрит, чтобы по нашему коннекшену к нам не ходили.
//…и так далее. Все эти активности взяты из головы, но они показывают
//использование прокси в реальной жизни – давать стандартный доступ к чемулибо, при этом отворачивая стандартные вызовы в проксю и добавляют свою
//логику.
//Паттерн прокси – подменяет реальный объект, и шлет ему запросы через свои
//интерфейсы. При этом может добавлять дополнительную логику, или создавать
//реальный объект если тот еще не создан.
//Как пример – вы можете иметь обычных и премиум пользователей приложения. К
//примеру – премиум пользователи могут скачивать файлы на большей скорости,
//чем обычные пользователи. Потому, как объекту, который отвечает за скачивание
//файлов в вашем приложении, не обязательно знать про существование разных
//типов пользователей, вы оборачиваете этот объект в прокси, которая в свою
//очередь знает про таких пользователей, и говорит объекту скачивания на какой
//скорости пользователь должен получить файл.
//Когда использовать паттерн:
//1. Возможно, у вас есть два сервера – тестовый и продуктовый. Когда Вы
//дебажите – скорее всего вы будете пользовать тестовый сервер, ну а когда
//компилируете приложение для продакшена – скорее всего реальный. Эту
//логику можно реализовать в проксе
//2. Добавление различных валидаций, и проверок безопасности
//3. Миллион других возможных ситуаций.
//Давайте создадим пример. Пускай у нас есть объект который отвечает за скачку
//файлов

class FileDownloader {
    init() {
        print("Downloader created")
    }
    func slowDownload() {
        print("Sloooooowly downloading...")
    }
    func fastDownload() {
        print("Shuuuuuh, already downloaded...")
    }
}

//Как видим, наш объект умеет скачивать быстро и медленно. При том, ему все
//равно какой пользователь и есть ли коннект к интернету.
//Давайте создадим нашу прокси:

class FileDownloaderProxy {

    private let downloader = FileDownloader()

    var isPremiumUser = false

    func fastDownload() {
        checkNetworkConnectivity()

        if !isPremiumUser {
            slowDownload()
        } else {
            downloader.fastDownload()
        }
    }

    func slowDownload() {
        downloader.slowDownload()
    }

    func checkNetworkConnectivity() {
        print("Checking network connectivity...")
    }
}


//Как видим проксятник незначительно умнее:
//1. Он знает про тип пользователя, и даже если дернули метод fastDownload но
//пользователь не премиум – будет вызван метод slowDownload.
//2. Он умеет проверять доступ к интернету (пусть это и просто выписка лога).


let proxy = FileDownloaderProxy()
proxy.isPremiumUser = false
proxy.fastDownload()
proxy.isPremiumUser = true
proxy.fastDownload()
